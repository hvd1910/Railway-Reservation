// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_BackendSM3.Repos.Models;

#nullable disable

namespace Project_BackendSM3.Migrations
{
    [DbContext(typeof(Projects3Context))]
    partial class Projects3ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.PaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("dateCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateUpdated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payment_method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("total")
                        .HasMaxLength(270)
                        .HasColumnType("real");

                    b.Property<string>("transaction_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("codeSchedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("dateCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateSchedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateUpdated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("delete_flag")
                        .HasColumnType("bit");

                    b.Property<float>("distance")
                        .HasColumnType("real");

                    b.Property<string>("route_from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("route_to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timeSchedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("trainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("codeSchedule")
                        .IsUnique();

                    b.HasIndex("trainId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("dateCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateUpdated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("codeTicket")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("dateCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateSchedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateUpdated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(270)
                        .HasColumnType("nvarchar(270)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("route_from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("route_to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("scheduleId")
                        .HasColumnType("int");

                    b.Property<int>("seat_num")
                        .HasColumnType("int");

                    b.Property<string>("seat_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timeSchedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("codeTicket")
                        .IsUnique();

                    b.HasIndex("scheduleId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.TicketPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("dateCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateUpdated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ticketName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TicketPrices");
                });

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ac1")
                        .HasColumnType("int");

                    b.Property<int>("ac2")
                        .HasColumnType("int");

                    b.Property<int>("ac3")
                        .HasColumnType("int");

                    b.Property<string>("dateCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateUpdated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("delete_flag")
                        .HasColumnType("bit");

                    b.Property<string>("trainName")
                        .IsRequired()
                        .HasMaxLength(270)
                        .HasColumnType("nvarchar(270)");

                    b.HasKey("Id");

                    b.HasIndex("trainName")
                        .IsUnique();

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(270)
                        .HasColumnType("nvarchar(270)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(270)
                        .HasColumnType("nvarchar(270)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.PaymentDetail", b =>
                {
                    b.HasOne("Project_BackendSM3.Repos.Models.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.Schedule", b =>
                {
                    b.HasOne("Project_BackendSM3.Repos.Models.Train", "Train")
                        .WithMany("Schedules")
                        .HasForeignKey("trainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.Ticket", b =>
                {
                    b.HasOne("Project_BackendSM3.Repos.Models.Schedule", "Schedule")
                        .WithMany("Tickets")
                        .HasForeignKey("scheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.Schedule", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Project_BackendSM3.Repos.Models.Train", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
